/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package iams_g10;

/**
 *
 * @author Tasnima Hamid
 */
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.ResultSetMetaData;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import java.util.Date;

public class md extends javax.swing.JFrame {

    /**
     * Creates new form md
     */
    public md() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        viewincomebtn = new javax.swing.JButton();
        viewcashbtn = new javax.swing.JButton();
        addempbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        cheq = new javax.swing.JTextField();
        updt = new javax.swing.JButton();
        dlt = new javax.swing.JButton();
        id = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableincome = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        stat = new javax.swing.JComboBox<>();
        accptbt = new javax.swing.JButton();
        rjctbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel3.setText("ID");

        jLabel1.setText("Account");

        jLabel2.setText("Status");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(303, 303, 303)
                .addComponent(jLabel3)
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("View Employee Info");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        viewincomebtn.setText("View Income Transaction");
        viewincomebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewincomebtnActionPerformed(evt);
            }
        });

        viewcashbtn.setText("View Cash Transaction");
        viewcashbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewcashbtnActionPerformed(evt);
            }
        });

        addempbtn.setText("Add Employee");
        addempbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addempbtnActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Username", "Name", "Email", "Position"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Account_no", "Amount", "Date", "Status"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        updt.setText("UPDATE");
        updt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updtActionPerformed(evt);
            }
        });

        dlt.setText("DELETE");
        dlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dltActionPerformed(evt);
            }
        });

        jTableincome.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Cheque No", "Amount", "Date Issued", "Income Source"
            }
        ));
        jScrollPane3.setViewportView(jTableincome);

        jButton2.setText("Sign Out");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        stat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Accepted", "Declined" }));

        accptbt.setText("View Accepted Bills");
        accptbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accptbtActionPerformed(evt);
            }
        });

        rjctbtn.setText("View Declined Bills");
        rjctbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rjctbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(viewcashbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addempbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(updt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dlt)))
                        .addGap(28, 28, 28))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 36, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(viewincomebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cheq, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(stat, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGap(0, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(rjctbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(accptbt, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(addempbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewcashbtn)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(accptbt)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(cheq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(stat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(rjctbtn)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updt)
                            .addComponent(dlt))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewincomebtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

       
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //employee_info emp = new employee_info();
        //emp.setVisible(true);
        
        try{
            Connection conn = dbcon.getConnection();
            String query4 = "SELECT `id`, `username`, `mail`, `name`, `emp_position` FROM `registered_users`";

            //Statement state = (Statement) conn.createStatement();
            PreparedStatement pst = conn.prepareStatement(query4);

            ResultSet res = pst.executeQuery();
            //ResultSetMetaData res = res1.getMetaData();
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);

            //String columns[] = {"ID", "Username", "Email", "Name", "Employee_position"};
            //String data[][] = new String[12][5];

            //int i = 0;
            while(res.next()){               
                model.addRow(new Object[]{res.getInt("id"), res.getString("username"), res.getString("name"), res.getString("mail"), res.getString("emp_position")});

            }

            //DefaultTableModel model = new DefaultTableModel(data, columns);
            //model.addRow(data);

            conn.close();
            System.out.println("Connection Terminated");
            }
        catch(ClassNotFoundException | SQLException e){
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void viewincomebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewincomebtnActionPerformed
        // TODO add your handling code here:
        try{
            Connection conn = dbcon.getConnection();
            String query6 = "SELECT * FROM `income_ledger`";

            //Statement state = (Statement) conn.createStatement();
            PreparedStatement pst = conn.prepareStatement(query6);

            ResultSet res = pst.executeQuery();
            //ResultSetMetaData res = res1.getMetaData();
            DefaultTableModel model = (DefaultTableModel)jTableincome.getModel();
            model.setRowCount(0);

            //String columns[] = {"ID", "Username", "Email", "Name", "Employee_position"};
            //String data[][] = new String[12][5];

            //int i = 0;
            while(res.next()){               
                model.addRow(new Object[]{res.getInt("ID"), res.getString("Cheq_no"), res.getString("Amount"), res.getString("Date_added"), res.getString("income_source")});

            }

            //DefaultTableModel model = new DefaultTableModel(data, columns);
            //model.addRow(data);

            conn.close();
            System.out.println("Connection Terminated");
            }
        catch(ClassNotFoundException | SQLException e){
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_viewincomebtnActionPerformed

    private void addempbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addempbtnActionPerformed
        // TODO add your handling code here:
        add_employee aemp = new add_employee();
        aemp.setVisible(true);
    }//GEN-LAST:event_addempbtnActionPerformed

    private void viewcashbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewcashbtnActionPerformed
        // TODO add your handling code here:
        try{
            Connection conn = dbcon.getConnection();
            String query5 = "SELECT * FROM `cash_ledger`";

            //Statement state = (Statement) conn.createStatement();
            PreparedStatement pst = conn.prepareStatement(query5);

            ResultSet res = pst.executeQuery();
            //ResultSetMetaData res = res1.getMetaData();
            DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
            model.setRowCount(0);

            //String columns[] = {"ID", "Username", "Email", "Name", "Employee_position"};
            //String data[][] = new String[12][5];

            //int i = 0;
            while(res.next()){               
                model.addRow(new Object[]{res.getInt("ID"), res.getString("account_no"), res.getString("amount"), res.getString("date_added"), res.getString("cheq_status")});

            }

            //DefaultTableModel model = new DefaultTableModel(data, columns);
            //model.addRow(data);

            conn.close();
            System.out.println("Connection Terminated");
            }
        catch(ClassNotFoundException | SQLException e){
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_viewcashbtnActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
         int j = jTable2.getSelectedRow();
         TableModel model = jTable2.getModel();
         
         id.setText(model.getValueAt(j,0).toString());
         cheq.setText(model.getValueAt(j,1).toString());
         stat.setSelectedItem(model.getValueAt(j,4).toString());
    }//GEN-LAST:event_jTable2MouseClicked

    private void updtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updtActionPerformed
        // TODO add your handling code here:
        try{
            Connection conn = dbcon.getConnection();
            String stat1 = stat.getSelectedItem().toString();
            int j = Integer.parseInt(id.getText());
            
            if(stat1.equals("") || id.getText().equals("")){
               JOptionPane.showMessageDialog(this, "Please insert data correctly"); 
            }
            else{
            Statement state = (Statement) conn.createStatement();
            String query8 = "UPDATE `cash_ledger` SET `cheq_status`='"+stat1+"' WHERE `id` = "+j;
            state.executeUpdate(query8);
            JOptionPane.showMessageDialog(this, "Data Updated Successfully");
            Statement state4 = (Statement) conn.createStatement();
            String query11 = "Select * from `cash_ledger` WHERE `id` = "+j;
            ResultSet res2 = state4.executeQuery(query11);
            
            String acc_no = "";
            float amount = 0;
            Date datead = new Date();
            
            while(res2.next()){
            acc_no = res2.getString("account_no");
            amount = res2.getFloat("amount");
            datead = res2.getDate("date_added");
            }
            
            if (stat1.equals("Accepted")){
                Statement state2 = (Statement) conn.createStatement();
                String query9 = "INSERT INTO `iams`.`accepted_bills` (`account_no`, `amount`,  `date_added`, `cheq_status`) VALUES('" + acc_no + "','" + amount + "','" + datead + "','" + stat1 + "')";
                state2.executeUpdate(query9);
            }
            if(stat1.equals("Declined")){
                Statement state3 = (Statement) conn.createStatement();
                String query10 = "INSERT INTO `iams`.`rejected_bills` (`account_no`, `amount`,  `date_added`, `cheq_status`) VALUES('" + acc_no + "','" + amount + "','" + datead + "','" + stat1 + "')";
                state3.executeUpdate(query10);
            }
            }
        }
        catch(ClassNotFoundException | SQLException e){
            System.out.println(e.toString());
            JOptionPane.showMessageDialog(this, "Data couldn't be updated beacuse "+ e.toString());
        } 
    }//GEN-LAST:event_updtActionPerformed

    private void dltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dltActionPerformed
        // TODO add your handling code here:
        try{
            Connection conn = dbcon.getConnection();
            Statement state = (Statement) conn.createStatement();
            int j = Integer.parseInt(id.getText());
            String query9 = "DELETE FROM `cash_ledger` WHERE id="+j;
            state.executeUpdate(query9);
            JOptionPane.showMessageDialog(this, "Data Deleted Successfully");
        }
        catch(ClassNotFoundException | SQLException e){
            System.out.println(e.toString());
            JOptionPane.showMessageDialog(this, "Data couldn't be deleted beacuse "+ e.toString());
        }
    }//GEN-LAST:event_dltActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        frame.dispose();
        login sign = new login();
        sign.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void accptbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accptbtActionPerformed
        // TODO add your handling code here:
        try{
            Connection conn = dbcon.getConnection();
            String query13 = "SELECT * FROM `accepted_bills`";

            //Statement state = (Statement) conn.createStatement();
            PreparedStatement pst = conn.prepareStatement(query13);

            ResultSet res = pst.executeQuery();
            //ResultSetMetaData res = res1.getMetaData();
            DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
            model.setRowCount(0);

            //String columns[] = {"ID", "Username", "Email", "Name", "Employee_position"};
            //String data[][] = new String[12][5];

            //int i = 0;
            while(res.next()){               
                model.addRow(new Object[]{res.getInt("ID"), res.getString("account_no"), res.getString("amount"), res.getString("date_added"), res.getString("cheq_status")});

            }

            //DefaultTableModel model = new DefaultTableModel(data, columns);
            //model.addRow(data);

            conn.close();
            System.out.println("Connection Terminated");
            }
        catch(ClassNotFoundException | SQLException e){
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_accptbtActionPerformed

    private void rjctbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rjctbtnActionPerformed
        // TODO add your handling code here:
        try{
            Connection conn = dbcon.getConnection();
            String query14 = "SELECT * FROM `rejected_bills`";

            //Statement state = (Statement) conn.createStatement();
            PreparedStatement pst = conn.prepareStatement(query14);

            ResultSet res = pst.executeQuery();
            //ResultSetMetaData res = res1.getMetaData();
            DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
            model.setRowCount(0);

            //String columns[] = {"ID", "Username", "Email", "Name", "Employee_position"};
            //String data[][] = new String[12][5];

            //int i = 0;
            while(res.next()){               
                model.addRow(new Object[]{res.getInt("ID"), res.getString("account_no"), res.getString("amount"), res.getString("date_added"), res.getString("cheq_status")});

            }

            //DefaultTableModel model = new DefaultTableModel(data, columns);
            //model.addRow(data);

            conn.close();
            System.out.println("Connection Terminated");
            }
        catch(ClassNotFoundException | SQLException e){
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_rjctbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(md.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(md.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(md.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(md.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frame = new md();
                frame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accptbt;
    private javax.swing.JButton addempbtn;
    private javax.swing.JTextField cheq;
    private javax.swing.JButton dlt;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTableincome;
    private javax.swing.JButton rjctbtn;
    private javax.swing.JComboBox<String> stat;
    private javax.swing.JButton updt;
    private javax.swing.JButton viewcashbtn;
    private javax.swing.JButton viewincomebtn;
    // End of variables declaration//GEN-END:variables
    static md frame;
}
